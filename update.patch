--- a/backend/engine/ai/conventions/negative_doubles.py
+++ b/backend/engine/ai/conventions/negative_doubles.py
@@ -0,0 +1,31 @@
+from engine.hand import Hand
+from engine.ai.conventions.base_convention import ConventionModule
+from typing import Optional, Tuple, Dict
+
+class NegativeDoubleConvention(ConventionModule):
+    """
+    Playbook for making a Negative Double.
+    This is used by the responder after an opponent's overcall.
+    """
+
+    def evaluate(self, hand: Hand, features: Dict) -> Optional[Tuple[str, str]]:
+        if not self._is_applicable(features):
+            return None
+
+        # Standard rule: 6+ points and 4+ cards in an unbid major.
+        if hand.hcp >= 6:
+            opening_bid = features['auction_features']['opening_bid']
+            overcall = features['auction_history'][-1]
+            
+            # Check for unbid hearts
+            if '♥' not in opening_bid and '♥' not in overcall and hand.suit_lengths['♥'] >= 4:
+                return ("X", "Negative Double, showing 4+ hearts and 6+ points.")
+            # Check for unbid spades
+            if '♠' not in opening_bid and '♠' not in overcall and hand.suit_lengths['♠'] >= 4:
+                return ("X", "Negative Double, showing 4+ spades and 6+ points.")
+
+        return None
+
+    def _is_applicable(self, features: Dict) -> bool:
+        """Applicable if partner opened, RHO overcalled, and it's our first bid."""
+        auction = features['auction_features']
+        my_bids = [bid for i, bid in enumerate(features['auction_history']) if features['positions'][i % 4] == features['my_index']]
+        return (len(features['auction_history']) == 2 and
+                auction['opener_relationship'] == 'Partner' and
+                len(my_bids) == 0)
--- a/backend/engine/ai/decision_engine.py
+++ b/backend/engine/ai/decision_engine.py
@@ -3,6 +3,7 @@
 from engine.ai.conventions.preempts import PreemptConvention
 from engine.ai.conventions.blackwood import BlackwoodConvention
 from engine.overcalls import OvercallModule
+from engine.ai.conventions.negative_doubles import NegativeDoubleConvention
 from engine.ai.conventions.takeout_doubles import TakeoutDoubleConvention
 
 def select_bidding_module(features):
@@ -15,6 +16,7 @@
     specialists = {
         'blackwood': BlackwoodConvention(),
         'preempts': PreemptConvention(),
+        'negative_doubles': NegativeDoubleConvention(),
         'stayman': StaymanConvention(),
         'jacoby': JacobyConvention(),
         'overcalls': OvercallModule(),